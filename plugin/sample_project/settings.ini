// The script that should be started when the application runs.
boot_script = "core/appkit/lua/main"

// Package to be loaded on boot
boot_package = "boot"

// In Debug and Development configurations, autoload disables the package
// loading system and directly loads resources as needed. Disable autoload
// during development to test package file configurations and to minimize
// loaded assets.

// Note: moved to boot.package
autoload = true

script_data = {
	project_script = "app"
}

// Settings for the win32 platform
win32 = {
	window_name = "Stingray Plugin"
	floating_point_exceptions = false

	renderer = {
		screen_resolution = [ 1280, 720 ]
		adapter_index = 0
		fullscreen_output = 0
		fullscreen = false
		aspect_ratio = -1
		d3d_debug = false
		vsync = true
	}

	// Note: Adjust render settings below
	render_settings = {
		//sun_shadows = true
		//sun_shadow_map_size = [ 2048, 2048 ]
		// Only on PC, PS4, XB1: medium == 4 tap PCF, high == 5x5 PCF
		// Ignored on mobile
		//sun_shadow_map_filter_quality = "high"
		//local_lights_shadow_map_filter_quality = "high"

		//deferred_local_lights_cast_shadows = true
		//forward_local_lights_cast_shadows = true
		//local_lights_shadow_atlas_size = [ 2048, 2048 ]

		//particles_local_lighting = true
		//particles_receive_shadows = true
		//particles_tessellation = true
		//particles_cast_shadows = false

		//local_lights = true
		//fxaa_enabled = true
		//taa_enabled = false
		//motion_blur_enabled = true
		//ao_enabled = true
		//ao_half_res = false
		//dof_enabled = true
		//bloom_enabled = true
		//ssr_enabled = true
		//ssr_high_quality = false
		//lens_quality_enabled = true
	}
}

error_levels = {
	// Treat semantic mismatches between vertex data and vertex shader as warnings, output warning message and ignore draw call
	semantic_mismatch = "warning"

	// Treat missing materials from .material files as warnings
	missing_material = "warning"
	// To be able to package and ship an application with missing resources you'll need to specify the fallback resources in the fallback_resource_package
	fallback_resource_package = "core/fallback_resources/fallback_resources"

	// In case a resource lookup fails, warn and fallback to specified fallback_resource
	missing_resources = {
				shader = {   fallback_resource = "missing_shader" }
				texture = {  fallback_resource = "core/fallback_resources/missing_texture" }
				unit = {     fallback_resource = "core/fallback_resources/missing_unit" }
				material = { fallback_resource = "core/fallback_resources/missing_material" }
				flow = { fallback_resource = "core/fallback_resources/missing_flow" }
	}
}

render_config = "core/stingray_renderer/renderer"
performance_hud = "core/performance_hud/performance_hud"

physx = {
	apex_cloth = false
	apex_cloth_lod_unit_cost = 1E-05
	apex_lod_resource_budget = 3
}

data_compiler = {
	resource_overrides = [
		{suffix = ".win32", platforms = ["win32"]}
		{suffix = ".ps4", platforms = ["ps4"]}
		{suffix = ".xb1", platforms = ["xb1"]}
		{suffix = ".ios", platforms = ["ios"]}
		{suffix = ".android", platforms = ["android"]}
	]
}
